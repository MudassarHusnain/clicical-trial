generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Study {
  id        Int       @id @default(autoincrement())
  name      String
  noOfDays  Int
  noOfRates Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  clerkId   String
  groups    Group[]   @relation("StudyGroups")
}

model Group {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  studyId   Int?      // Foreign key to reference Study, made nullable to allow SetNull on delete
  study     Study?    @relation("StudyGroups", fields: [studyId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  rates     Rate[]    @relation("GroupRates")
}

model Rate {
  id        Int       @id @default(autoincrement())
  name      String
  groupId   Int?      // Foreign key to reference Group, made nullable to allow SetNull on delete
  group     Group?    @relation("GroupRates", fields: [groupId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  days      Day[]     @relation("RateDays")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model Day {
  id                     Int                       @id @default(autoincrement())
  name                   String
  createdAt              DateTime                  @default(now())
  updatedAt              DateTime                  @default(now()) @updatedAt
  rateId                 Int?                      // Foreign key to reference Rate, made nullable to allow SetNull on delete
  rate                   Rate?                     @relation("RateDays", fields: [rateId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  animalAssessmentData   AnimalAssessmentDataRate[] @relation("DayAnimalAssessments")
  dataCollectionEsrRate  DataCollectionEsrRate[]   @relation("DayEsrRates")
  activityRates          ActivityRate[]            @relation("DayActivities")
  dataCollectionCbcRate  DataCollectionCbcRate[]   @relation("DayCbcRates")
}

model DataCollectionEsrRate {
  id        Int       @id @default(autoincrement())
  results   Float
  refValue  Float
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  dayId     Int?      // Foreign key to reference Day, made nullable to allow SetNull on delete
  day       Day?      @relation("DayEsrRates", fields: [dayId], references: [id], onDelete: SetNull, onUpdate: Cascade)
}

model AnimalAssessmentDataRate {
  id        Int       @id @default(autoincrement())
  weight    Int
  lps       Float
  detamine  Float
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  dayId     Int?      // Foreign key to reference Day, made nullable to allow SetNull on delete
  day       Day?      @relation("DayAnimalAssessments", fields: [dayId], references: [id], onDelete: SetNull, onUpdate: Cascade)
}

model DataCollectionCbcRate {
  id                 Int       @id @default(autoincrement())
  parametersRefValue Int
  rbc                Float
  pcv                Float
  plt                Float
  wbc                Float
  neutrophil         Float
  lymphocyte         Float
  eosinophil         Float
  basophil           Float
  monocyte           Float
  mcv                Float
  mch                Float
  mchc               Float
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @default(now()) @updatedAt
  dayId              Int?      // Foreign key to reference Day, made nullable to allow SetNull on delete
  day                Day?      @relation("DayCbcRates", fields: [dayId], references: [id], onDelete: SetNull, onUpdate: Cascade)
}

model ActivityRate {
  id        Int       @id @default(autoincrement())
  comments  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  dayId     Int?      // Foreign key to reference Day, made nullable to allow SetNull on delete
  day       Day?      @relation("DayActivities", fields: [dayId], references: [id], onDelete: SetNull, onUpdate: Cascade)
}
